@page "{id?}"
@model ProdutoModel
@{
    ViewData["Title"] = "Produto";
}

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery antiforgery

<div class="container my-5">
    <!-- Nome do Produto -->
    <div class="row mb-4">
        <div class="col-12">
            <h2 class="text-uppercase fw-bold">@Model.Produto?.ProductName</h2>
        </div>
    </div>

    <!-- Conteúdo -->
    <div class="row">
        <div class="col-12">

            <!-- Aba: DECORACAO -->
            <div class="info-tab">
                <div class="info-header d-flex justify-content-between align-items-center" onclick="toggleTab(this)">
                    <span class="fw-semibold text-uppercase">DECORAÇÃO</span>
                    <div class="d-flex gap-1">
                        <button type="button" class="icon-btn text-primary" title="Salvar imagens" onclick="event.stopPropagation(); enviarImagens('DECORACAO');">
                            <img src="~/images/icons/sav-image.png" alt="Salvar" class="icon-img" />
                        </button>
                        <button type="button" class="icon-btn text-success" title="Adicionar" onclick="event.stopPropagation(); triggerImageInput(event, 'DECORACAO')">
                            <img src="~/images/icons/add-image.png" alt="Adicionar" class="icon-img" />
                        </button>
                        <button type="button" class="icon-btn text-danger" title="Remover" onclick="event.stopPropagation(); removeCurrentImage('DECORACAO');">
                            <img src="~/images/icons/rem-image.png" alt="Remover" class="icon-img" />
                        </button>
                        <input type="file" id="imageInputCamera_DECORACAO" accept="image/*" capture="environment" style="display:none" onchange="handleImageSelected(event, 'DECORACAO')">
                        <input type="file" id="imageInputGallery_DECORACAO" accept="image/*" style="display:none" onchange="handleImageSelected(event, 'DECORACAO')">
                    </div>
                </div>

                <div class="info-content px-2 py-2">
                    @if (Model.ImgDecoration?.Any() == true)
                    {
                        <div class="text-center">
                            <div class="zoom-container mx-auto mb-3" data-finalidade="DECORACAO">
                                <img id="mainImage_DECORACAO" src="@Model.ImgDecoration.First()" class="zoom-img" />
                            </div>
                            <div class="thumbnail-row d-flex align-items-center justify-content-center position-relative">
                                <button class="carousel-btn prev" onclick="scrollThumbnail(-1, 'DECORACAO')">&#10094;</button>
                                <div id="thumbContainer_DECORACAO" class="thumb-container-horizontal">
                                    @for (int i = 0; i < Model.ImgDecoration.Count; i++)
                                    {
                                        var img = Model.ImgDecoration[i];
                                        <img src="@img" class="img-thumbnail thumbnail-img" style="cursor: pointer;" onclick="setMainImage('@img','DECORACAO')" />
                                    }
                                </div>
                                <button class="carousel-btn next" onclick="scrollThumbnail(1, 'DECORACAO')">&#10095;</button>
                            </div>
                        </div>
                    }
                    else
                    {
                        <p class="text-muted">Nenhuma imagem disponível.</p>
                    }
                </div>
            </div>

            <!-- Aba: EMBALAGEM -->
            <div class="info-tab">
                <div class="info-header d-flex justify-content-between align-items-center" onclick="toggleTab(this)">
                    <span class="fw-semibold text-uppercase">EMBALAGEM</span>
                    <div class="d-flex gap-1">
                        <button type="button" class="icon-btn text-primary" title="Salvar imagens" onclick="event.stopPropagation(); enviarImagens('EMBALAGEM');">
                            <img src="~/images/icons/sav-image.png" alt="Salvar" class="icon-img" />
                        </button>
                        <button type="button" class="icon-btn text-success" title="Adicionar" onclick="event.stopPropagation(); triggerImageInput(event, 'EMBALAGEM')">
                            <img src="~/images/icons/add-image.png" alt="Adicionar" class="icon-img" />
                        </button>
                        <button type="button" class="icon-btn text-danger" title="Remover" onclick="event.stopPropagation(); removeCurrentImage('EMBALAGEM');">
                            <img src="~/images/icons/rem-image.png" alt="Remover" class="icon-img" />
                        </button>
                        <input type="file" id="imageInputCamera_EMBALAGEM" accept="image/*" capture="environment" style="display:none" onchange="handleImageSelected(event, 'EMBALAGEM')">
                        <input type="file" id="imageInputGallery_EMBALAGEM" accept="image/*" style="display:none" onchange="handleImageSelected(event, 'EMBALAGEM')">
                    </div>
                </div>

                <div class="info-content px-2 py-2">
                    @if (Model.ImgPackage?.Any() == true)
                    {
                        <div class="text-center">
                            <div class="zoom-container mx-auto mb-3" data-finalidade="EMBALAGEM">
                                <img id="mainImage_EMBALAGEM" src="@Model.ImgPackage.First()" class="zoom-img" />
                            </div>
                            <div class="thumbnail-row d-flex align-items-center justify-content-center position-relative">
                                <button class="carousel-btn prev" onclick="scrollThumbnail(-1, 'EMBALAGEM')">&#10094;</button>
                                <div id="thumbContainer_EMBALAGEM" class="thumb-container-horizontal">
                                    @for (int i = 0; i < Model.ImgPackage.Count; i++)
                                    {
                                        var img = Model.ImgPackage[i];
                                        <img src="@img" class="img-thumbnail thumbnail-img" style="cursor: pointer;" onclick="setMainImage('@img','EMBALAGEM')" />
                                    }
                                </div>
                                <button class="carousel-btn next" onclick="scrollThumbnail(1, 'EMBALAGEM')">&#10095;</button>
                            </div>
                        </div>
                    }
                    else
                    {
                        <p class="text-muted">Nenhuma imagem disponível.</p>
                    }
                </div>
            </div>

            <!-- Aba: PALETIZACAO -->
            <div class="info-tab">
                <div class="info-header d-flex justify-content-between align-items-center" onclick="toggleTab(this)">
                    <span class="fw-semibold text-uppercase">PALETIZAÇÃO</span>
                    <div class="d-flex gap-1">
                        <button type="button" class="icon-btn text-primary" title="Salvar imagens" onclick="event.stopPropagation(); enviarImagens('PALETIZACAO');">
                            <img src="~/images/icons/sav-image.png" alt="Salvar" class="icon-img" />
                        </button>
                        <button type="button" class="icon-btn text-success" title="Adicionar" onclick="event.stopPropagation(); triggerImageInput(event, 'PALETIZACAO')">
                            <img src="~/images/icons/add-image.png" alt="Adicionar" class="icon-img" />
                        </button>
                        <button type="button" class="icon-btn text-danger" title="Remover" onclick="event.stopPropagation(); removeCurrentImage('PALETIZACAO');">
                            <img src="~/images/icons/rem-image.png" alt="Remover" class="icon-img" />
                        </button>
                        <input type="file" id="imageInputCamera_PALETIZACAO" accept="image/*" capture="environment" style="display:none" onchange="handleImageSelected(event, 'PALETIZACAO')">
                        <input type="file" id="imageInputGallery_PALETIZACAO" accept="image/*" style="display:none" onchange="handleImageSelected(event, 'PALETIZACAO')">
                    </div>
                </div>

                <div class="info-content px-2 py-2">
                    <div class="text-center">
                        <div class="zoom-container mx-auto mb-3" data-finalidade="PALETIZACAO">
                            <img id="mainImage_PALETIZACAO" src="@(Model.ImgPallet?.FirstOrDefault() ?? Url.Content("~/img/not-found.jpg"))" class="zoom-img" />
                        </div>
                        <div class="thumbnail-row d-flex align-items-center justify-content-center position-relative">
                            <button class="carousel-btn prev" onclick="scrollThumbnail(-1, 'PALETIZACAO')">&#10094;</button>
                            <div id="thumbContainer_PALETIZACAO" class="thumb-container-horizontal">
                                @if (Model.ImgPallet?.Any() == true)
                                {
                                    @for (int i = 0; i < Model.ImgPallet.Count; i++)
                                    {
                                        var img = Model.ImgPallet[i];
                                        <img src="@img" class="img-thumbnail thumbnail-img" style="cursor: pointer;" onclick="setMainImage('@img','PALETIZACAO')" />
                                    }
                                }
                                else
                                {
                                    <!-- Nenhuma miniatura se não houver imagens -->
                                }
                            </div>
                            <button class="carousel-btn next" onclick="scrollThumbnail(1, 'PALETIZACAO')">&#10095;</button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Outras abas -->
            <div class="info-tab">
                <div class="info-header" onclick="toggleTab(this)">INFORMAÇÕES DO PRODUTO</div>
                <div class="info-content px-2 py-2">
                    <div class="row border-bottom py-1">
                        <div class="col-5 fw-semibold">Código do Produto</div>
                        <div class="col-7">@Model.Produto?.ProductId</div>
                    </div>
                    <div class="row border-bottom py-1">
                        <div class="col-5 fw-semibold">Nome</div>
                        <div class="col-7">@Model.Produto?.ProductName</div>
                    </div>
                    <div class="row py-1">
                        <div class="col-5 fw-semibold">Código de Barras</div>
                        <div class="col-7">@Model.Produto?.Barcode</div>
                    </div>
                </div>
            </div>

            <div class="info-tab">
                <div class="info-header" onclick="toggleTab(this)">DIMENSÕES</div>
                <div class="info-content px-2 py-2">
                    <p>Em construção !!!</p>
                </div>
            </div>

            <div class="info-tab">
                <div class="info-header" onclick="toggleTab(this)">INFORMAÇÕES FISCAIS</div>
                <div class="info-content px-2 py-2">
                    <p>Em construção !!!</p>
                </div>
            </div>

            <div class="info-tab">
                <div class="info-header" onclick="toggleTab(this)">OXFORD</div>
                <div class="info-content px-2 py-2">
                    <p>Em construção !!!</p>
                </div>
            </div>

            <div class="info-tab">
                <div class="info-header" onclick="toggleTab(this)">BOM</div>
                <div class="info-content px-2 py-2">
                    <p>Em construção !!!</p>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="~/css/produto.css" />
}

@section Scripts {
    @* Extrai o token no servidor *@
    @{
        var token = antiforgery.GetAndStoreTokens(HttpContext);
    }

    <script>
        window.produtoId = '@Model.Produto?.ProductId';
        window.token = '@token.RequestToken';

        window.imagens = {
            EMBALAGEM: @Html.Raw(Json.Serialize(Model.ImgPackage ?? new List<string>())),
            DECORACAO: @Html.Raw(Json.Serialize(Model.ImgDecoration ?? new List<string>())),
            PALETIZACAO: @Html.Raw(Json.Serialize(Model.ImgPallet ?? new List<string>()))
        };

        window.currentImageIndex_EMBALAGEM = (window.imagens.EMBALAGEM.length > 0) ? 0 : -1;
        window.currentImageIndex_DECORACAO = (window.imagens.DECORACAO.length > 0) ? 0 : -1;
        window.currentImageIndex_PALETIZACAO = (window.imagens.PALETIZACAO.length > 0) ? 0 : -1;
    </script>

    <script src="~/js/produto.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
}